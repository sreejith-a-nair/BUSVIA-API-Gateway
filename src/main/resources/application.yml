server:
  port: 8989

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

management:
  tracing:
    sampling:
      probability: 1.0

spring:
  application:
    name: api-gateway
  config:
    import: "optional:configserver:http://localhost:8088"
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:4200"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - DELETE
      routes:
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: auth-service
                fallbackuri: forward:/authServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user/**
          filters:
            - AuthenticationFilter
            - name: CircuitBreaker
              args:
                name: user-service
                fallbackuri: forward:/userServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: bus-service
          uri: lb://bus-service
          predicates:
            - Path=/bus/**
          filters:
            - name: CircuitBreaker
              args:
                name: bus-service
                fallbackuri: forward:/busServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
          filters:
            - name: CircuitBreaker
              args:
                name: admin-service
                fallbackuri: forward:/adminServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: booking-service
          uri: lb://booking-service
          predicates:
            - Path=/booking/**
          filters:
            - name: CircuitBreaker
              args:
                name: booking-service
                fallbackuri: forward:/bookingServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: communication-service
          uri: lb://communication
          predicates:
            - Path=/**
          filters:
            - name: CircuitBreaker
              args:
                name: communication-service
                fallbackuri: forward:/communicationServiceFallBack
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
